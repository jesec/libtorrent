load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")
load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")

config_setting(
    name = "macos",
    values = {"cpu": "darwin"},
    visibility = ["//visibility:private"],
)

config_setting(
    name = "opt",
    values = {"compilation_mode": "opt"},
    visibility = ["//visibility:private"],
)

COPTS = [
    "-std=c++17",
    "-Wall",
    "-Wextra",
    "-Wpedantic",
    "-Wdeprecated",
    "-Werror",
] + select({
    "//:opt": [
        "-Ofast",
        "-flto",
    ],
    "//conditions:default": [],
})

LINKOPTS = select({
    "//:opt": [
        "-O3",
        "-flto",
    ],
    "//conditions:default": [],
})

filegroup(
    name = "cmake_rules",
    srcs = [
        "CMakeLists.txt",
    ] + glob([
        "cmake/**/*",
    ]),
)

cmake(
    name = "buildinfo",
    cache_entries = {
        "BUILDINFO_ONLY": "ON",
    },
    lib_source = "//:cmake_rules",
    out_headers_only = True,
)

filegroup(
    name = "included_headers",
    srcs = glob(
        ["include/**/*.h"],
        exclude = ["include/buildinfo.h"],
    ),
)

filegroup(
    name = "exported_headers",
    srcs = glob(["include/torrent/**/*.h"]),
)

cc_library(
    name = "torrent",
    srcs = glob(["src/**/*.cc"]) + ["//:included_headers"],
    hdrs = ["//:exported_headers"],
    copts = COPTS + ["-DEXPORT_LIBTORRENT_SYMBOLS=1"],
    includes = ["include"],
    linkopts = LINKOPTS + [
        "-lpthread",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//:buildinfo",
        "@boringssl//:crypto",
        "@zlib",
    ],
)

cc_library(
    name = "test_common",
    srcs = ["test/main.cc"] + glob([
        "test/helpers/*.cc",
    ]),
    copts = COPTS,
    includes = ["include"],
    linkopts = LINKOPTS,
    deps = [
        "//:torrent",
        "@com_google_googletest//:gtest",
    ],
)

[cc_test(
    name = "%s" % t.split("/")[-1][:-3],
    srcs = [
        t,
        "//:included_headers",
    ],
    copts = COPTS,
    includes = ["include"],
    linkopts = LINKOPTS,
    tags = ["libtorrent_test"],
    deps = ["//:test_common"],
) for t in glob([
    "test/**/test_*.cc",
])]

test_suite(
    name = "libtorrent_test",
    tags = ["libtorrent_test"],
)
